import { StepScene } from '@vk-io/scenes'

import config from 'config'

import Good from '../models/Good'
import User from '../models/User'
import BotConfig from '../models/BotConfig'
import MailingUser from '../models/MailingUser'

import baseSendMessage from '../baseSendMessage'

import keyboard from '../markup/keyboard'

import { methodSearchMarkup, methodSearchOnlyNameMarkup, subscribeSearch } from '../markup/searchMarkup'
import { skipMarkup, previousMarkup, menuMarkup, nextPageMarkup, exitPageMarkup } from '../markup/generalMarkup'

import getGoodFromStockx from '../utils/getGoodFromStockx'
import convertURL from '../utils/convertURL'
import searchGoods from '../utils/searchGoods'
import getCarousel from '../utils/getCarousel'
import { incrementSearch } from '../utils/updateSearchInfo'

const searchScene = [
	new StepScene('search', [
		async ctx => {
            ctx.scene.state.userQuery = { type: null, value: null}
			ctx.scene.state.range = [0, Infinity]
			ctx.scene.state.sizeRange = []
            ctx.scene.state.activePage = 0

            if (ctx.text == '–ú–µ–Ω—é') {
                baseSendMessage(ctx)
                return ctx.scene.leave()
            }

            const user = ctx.state.user
            if (user.freeSearch <= 0 && user.extendedAccess == null)
                return ctx.send({
                    message: `‚ùó –£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–æ–∏—Å–∫–∏.\n\nüöÄ –ù–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ PRO-–≤–µ—Ä—Å–∏—é –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏—Å–∫–æ–≤ –∏ –ø—Ä–æ–¥–∞–∂. –û–±—Ä–∞—â–∞—Ç—å—Å—è –∫ @impossiblelevell (–≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)`,
                    keyboard: keyboard(menuMarkup)
                })

            const onlyNameSearch = config.get('onlyNameSearch')

            const markup = onlyNameSearch ? methodSearchOnlyNameMarkup : methodSearchMarkup

			if (ctx.scene.step.firstTime || !ctx.text)
				return ctx.send({
					message: '‚ùó –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ —Å –ø–æ–º–æ—â—å—é –∫–∞–∫–æ–≥–æ –º–µ—Ç–æ–¥–∞ —Å–æ–±–∏—Ä–∞—Ç–µ—Å—å –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä',
					keyboard: keyboard([...markup, ...menuMarkup]),
				})

            switch (ctx.text) {
                case '–ü–æ–∏—Å–∫ —Å–∫–∏–¥–∫–∏':
                    return ctx.send({
                        message: `–û—á–µ–Ω—å —Ä–∞–¥—ã —á—Ç–æ —Ç–µ–±—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏ –Ω–∞—à–∏ —Å–∫–∏–¥–∫–∏! –ú—ã –¥–µ–ª–∞–µ–º —Å–∫–∏–¥–∫—É –≤ —Ç–∞–∫–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –∫–∞–∫:\n\nLamoda -25%\nLeform 35-40%\nAsos –¥–æ 40%\nFarfetch –¥–æ 20%\nStreet Beat –¥–æ 40%\nBrandshop 15%\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—à–∏ https://vk.com/eileonov`,
                        keyboard: keyboard([...markup, ...menuMarkup])
                    })
                case '–ù–∞–∑–≤–∞–Ω–∏–µ':
                    return ctx.scene.step.go(1)
                case '–°—Å—ã–ª–∫–∞':
                    return ctx.scene.step.go(2)
            }
		},
		// –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∏–º–µ–Ω–∏
		async ctx => {
			if (ctx.scene.step.firstTime || (!ctx.text && !ctx?.attachments[0]?.url))
				return ctx.send({
					message: '‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞. –¢–û–õ–¨–ö–û –Ω–∞–∑–≤–∞–Ω–∏–µ!',
					keyboard: keyboard(previousMarkup),
				})

			if (ctx.text == '–ù–∞–∑–∞–¥')
				return ctx.scene.step.go(0)

			if (ctx.text?.length < 3)
				return ctx.send({
					message: '‚ùó –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞ ‚Äî 3 —Å–∏–º–≤–æ–ª–∞. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å',
					keyboard: keyboard(previousMarkup),
				})

            if (ctx.text?.length >= 100)
                return ctx.send({
                    message: '‚ùó –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞ ‚Äî 100 —Å–∏–º–≤–æ–ª–æ–≤. –í–≤–µ–¥–∏ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.',
                    keyboard: keyboard(previousMarkup),
                })

            const onlyNameSearch = config.get('onlyNameSearch')
            const isLink = /https?:\/\//i.test(ctx.text) || /stockx.com/i.test(ctx.text) || ctx?.attachments[0]?.url

            // –°–∫—Ä—ã—Ç–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø–æ–∏—Å–∫–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
            if (onlyNameSearch && isLink) {
                const link = convertURL(ctx.text || ctx?.attachments[0]?.url)

                if (/stockx.com/i.test(link) == false)
                    return ctx.send({
                        message: `‚ùó –°—Å—ã–ª–∫–∞ –Ω–µ –≤–µ–¥–µ—Ç –Ω–∞ —Å–∞–π—Ç stockx.com, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.\n\n–ü—Ä–∏–º–µ—Ä: stockx.com/air-jordan-1-retro-high-og-patent-bred`,
                        keyboard: keyboard(previousMarkup)
                    })

                const goodFromStockx = await getGoodFromStockx(link)

                if (!goodFromStockx)
                    return ctx.send({
                        message: `‚ùó –°—Å—ã–ª–∫–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –≤–µ–¥–µ—Ç –Ω–∞ —Ç–æ–≤–∞—Ä —Å stockx.com, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.\n\n–ü—Ä–∏–º–µ—Ä: stockx.com/air-jordan-1-retro-high-og-patent-bred`,
                        keyboard: keyboard(previousMarkup)
                    })

                ctx.send(`‚ùó –ë–æ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –ø–æ–∏—Å–∫ –ø–æ —Å—Å—ã–ª–∫–µ.\n–¢–æ–≤–∞—Ä: ${goodFromStockx.name}`)
        
                ctx.scene.state.userQuery = {
                    type: 'link',
                    value: link
                }
            } else {
                if (isLink)
                    return ctx.send({
                        message: `‚ùó –¢—ã —É–∫–∞–∑–∞–ª —Å—Å—ã–ª–∫—É –≤ –º–µ—Ç–æ–¥–µ "–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é". –î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã–±–µ—Ä–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–π –º–µ—Ç–æ–¥`,
                        keyboard: keyboard(previousMarkup)
                    })

                const onlyLettersRegex = /[^a-z–∞-—è—ë0-9\s]/gi
                const isInvalid = onlyLettersRegex.test(ctx.text)

                if (isInvalid)
                    return ctx.send({
                        message: `‚ùó –í –ø–æ–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑`,
                        keyboard: keyboard(previousMarkup)
                    })

                ctx.scene.state.userQuery = {
                    type: 'word',
                    value: ctx.text
                }
            }

			ctx.scene.step.go(3)
		},
		// –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ
		async ctx => {
			if (ctx.scene.step.firstTime || (!ctx.text && !ctx?.attachments[0]?.url))
                return ctx.send({
                    message: '‚ùó –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å —Å–∞–π—Ç–∞ stockx.com, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\n\n–ü—Ä–∏–º–µ—Ä: stockx.com/air-jordan-1-retro-high-og-patent-bred',
                    keyboard: keyboard(previousMarkup),
                })

			if (ctx.text == '–ù–∞–∑–∞–¥')
				return ctx.scene.step.go(0)

			const link = convertURL(ctx.text || ctx?.attachments[0]?.url)

			const goodFromStockx = await getGoodFromStockx(link)

			if (!goodFromStockx)
				return ctx.send({
					message: `‚ùó –°—Å—ã–ª–∫–∞ –Ω–µ –≤–µ–¥–µ—Ç –Ω–∞ —Ç–æ–≤–∞—Ä —Å stockx.com, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n\n–ü—Ä–∏–º–µ—Ä: stockx.com/air-jordan-1-retro-high-og-patent-bred`,
					keyboard: keyboard(previousMarkup)
				})
			
            ctx.scene.state.userQuery = {
                type: 'link',
                value: link,
                goodName: goodFromStockx.name
            }

			ctx.scene.step.go(3)
		},
		// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–∞–∑–º–µ—Ä—É
        async ctx => {
            if (ctx.scene.step.firstTime || !ctx.text)
                return ctx.send({
                    message: config.get('messages.search.filterSize'),
                    keyboard: keyboard([...previousMarkup, ...skipMarkup]),
                })

            switch (ctx.text) {
                case '–ù–∞–∑–∞–¥':
                    return ctx.scene.step.go(0)
                case '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
                    return ctx.scene.step.next()
            }

            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (/us/i.test(ctx.text))
                return ctx.send({
                    message: `‚ùó –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. —Ä–∞–∑–º–µ—Ä —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–µ–∑ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏ US. –ü—Ä–∏–º–µ—Ä—ã –≤–≤–æ–¥–∞ –Ω–∏–∂–µ:\n\n7.5US(M) = 7.5\n7.5US(W) = 7.5W\n7Y = 7Y\nXS = XS`,
                    keyboard: keyboard([...previousMarkup, ...skipMarkup])
                })

            if (/,/.test(ctx.text))
                return ctx.send({
                    message: `‚ùó –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –Ω–µ—Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π, —Ç–æ –æ–Ω —Ä–∞–∑–¥–µ–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–æ–π, –∞ –Ω–µ –∑–∞–ø—è—Ç–æ–π. –ü—Ä–∏–º–µ—Ä—ã –≤–≤–æ–¥–∞ –Ω–∏–∂–µ:\n\n7.5US(M) = 7.5\n7.5US(W) = 7.5W\n7Y = 7Y\nXS = XS`,
                    keyboard: keyboard([...previousMarkup, ...skipMarkup])
                })

            if (ctx.text.match(/[a-z]/gi))
                if (!/x|s|m|l|w|y|c|k/i.test(ctx.text))
                    return ctx.send({
                        message: `‚ùó –û—à–∏–±–∫–∞ —Å –≤–≤–æ–¥–æ–º –±—É–∫–≤—ã. –ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Ä–∞–∑–º–µ—Ä–æ–≤:\n\n7.5US(M) = 7.5\n7.5US(W) = 7.5W\n7Y = 7Y\nXS = XS`,
                        keyboard: keyboard([...previousMarkup, ...skipMarkup])
                    })
            //

            const range = ctx.text.toUpperCase().split(' ')
            ctx.scene.state.sizeRange = range

            return ctx.scene.step.next()
        },
	    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ü–µ–Ω–µ
		async ctx => {
			if (ctx.scene.step.firstTime || !ctx.text)
				return ctx.send({
					message: '‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ü–µ–Ω–µ? –ï—Å–ª–∏ –¥–∞, —Ç–æ —É–∫–∞–∂–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω.\n\n–ü—Ä–∏–º–µ—Ä: 10000-200000',
					keyboard: keyboard([...previousMarkup, ...skipMarkup]),
				})
                
            switch (ctx.text) {
                case '–ù–∞–∑–∞–¥':
                    return ctx.scene.step.go(0)
                case '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
                    return ctx.scene.step.next()
            }

			const patternNumber = /^\d+$/
			const rangeArr = ctx.text.split('-')

            // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å –∏ –æ–±–∞ –æ–Ω–∏ —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–æ–º (1500-2500)
			if (rangeArr.length == 2 && patternNumber.test(rangeArr[0]) && patternNumber.test(rangeArr[1])) {
				ctx.scene.state.range = [+rangeArr[0], +rangeArr[1]]
				return ctx.scene.step.next()
			} else {
				return ctx.send({
                    message: '–£–∫–∞–∂–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ \n\n‚ùå 10.000—Ä—É–±.-200.000—Ä—É–±.\n‚úÖ 10000-200000',
                    keyboard: keyboard([...previousMarkup, ...skipMarkup])
                })
			}
		},
		// –í—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
		async ctx => {
            try {
                if (ctx.scene.step.firstTime || !ctx.text) {
                    // –ó–∞–ø—Ä–æ—Å –∏ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const { userQuery, sizeRange, range: priceRange } = ctx.scene.state

                    const searchedGoods = await searchGoods({ userQuery, sizeRange, priceRange, isHide: false })
                    const user = ctx.state.user

                    if (searchedGoods.length) {
                            if (user.extendedAccess == null)
                                await User.updateOne(
                                    { userId: ctx.senderId },
                                    { $inc: { freeSearch: -1 } }
                                )

                            // –†–∞–∑–±–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –ø–æ–¥–º–∞—Å—Å–∏–≤—ã —Å–æ—Å—Ç–æ—è—â–∏–µ –∏–∑ 5 —Ç–æ–≤–∞—Ä–æ–≤
                            let searchedGoodInPages = []
                            let size = 3

                            if (user.extendedAccess)
                                size = 5

                            for (let i = 0; i < Math.ceil(searchedGoods.length / size); i++){
                                searchedGoodInPages[i] = searchedGoods.slice((i * size), (i * size) + size);
                            }
                            //

                            ctx.scene.state.searchedGoodInPages = searchedGoodInPages

                            const activePage = ctx.scene.state.activePage

                            const carousel = await getCarousel(searchedGoodInPages[activePage])


                            if (config.has('messages.search.after'))
                                ctx.send(config.get('messages.search.after'))

                            ctx.send(`‚ùó –ü–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω—ã —Ç–∞–∫–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:`)

                            // 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                            await ctx.send({
                                message: `üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${ activePage + 1}/${ searchedGoodInPages.length }`,
                                ...carousel,
                            })

                            const menuPages = [exitPageMarkup]

                            if (activePage + 1 < searchedGoodInPages.length)
                                menuPages.unshift(nextPageMarkup)

                            ctx.send({
                                message: 'üìÑ –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏',
                                keyboard: keyboard(menuPages)
                            })
                            //

                            // –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                            searchedGoodInPages[activePage].forEach(async ({ _id }) =>
                                await Good.findOneAndUpdate({ _id }, { $inc: { 'views': 1 } })
                            )

                            // –£–≤–µ–ª–∏—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ø–æ–∏—Å–∫–∞–º
                            await incrementSearch(ctx.senderId)
                    } else {
                        if (config.has('messages.search.notFound'))
                            ctx.send(config.get('messages.search.notFound'))
                        else
                            ctx.send(`‚ùó –ú—ã –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏ –Ω–∞ –Ω–∞—à–µ–π –ø–ª–æ—â–∞–¥–∫–µ. –ü–æ–ø—Ä–æ–±—É–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º –º–µ—Ç–æ–¥–æ–º –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –ø–æ—Å—Ç–∞–≤—å –¥—Ä—É–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã.`)

                        return ctx.scene.step.go(0)
                    }

                    // –û–±–Ω–æ–≤–∏—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞
                    await BotConfig.updateOne({ $inc: { 'stats.countSearch': 1 } })

                    return
                }

                if (ctx.text == '–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞') {
                    const searchedGoodInPages = ctx.scene.state.searchedGoodInPages

                    ctx.scene.state.activePage += 1
                    const activePage = ctx.scene.state.activePage

                    if (activePage + 1 > searchedGoodInPages.length) {
                        return ctx.send({
                            message: '‚ùó –¢–æ–≤–∞—Ä–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç',
                            keyboard: keyboard([exitPageMarkup])
                        })                     
                    }

                    const carousel = await getCarousel(searchedGoodInPages[activePage])

                    await ctx.send({
                        message: `üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${ activePage + 1 }/${ searchedGoodInPages.length }`,
                        ...carousel,
                    })

                    const menuPages = [exitPageMarkup]

                    if (activePage + 1 < searchedGoodInPages.length)
                        menuPages.unshift(nextPageMarkup)

                    ctx.send({
                        message: 'üìÑ –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏',
                        keyboard: keyboard(menuPages)
                    })

                    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                    searchedGoodInPages[activePage].forEach(async ({ _id }) =>
                        await Good.findOneAndUpdate({ _id }, { $inc: { 'views': 1 } })
                    )

                    return
                }
                
                if (ctx.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä') {
                    ctx.send('‚ùó –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é —Ç–µ–±—è –≤ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞')
                    return ctx.scene.step.next()
                }   

                
            } catch (e) {
                console.log(e)
                ctx.send('‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É')
                return ctx.scene.leave()
            }
		},
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ–∏—Å–∫
        async ctx => {
            if (ctx.state.user.extendedAccess == null)
                return ctx.scene.step.go(0)

            const { userQuery } = ctx.scene.state

            if (userQuery.type !== 'link')
                return ctx.scene.step.go(0)   

            if (ctx.scene.step.firstTime || !ctx.text) 
                return ctx.send({
                    message: '‚úâÔ∏è –£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–∏—Å–∫ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞. –ë–æ—Ç —Å–∞–º –Ω–∞–ø–∏—à–µ—Ç —Ç–µ–±–µ, –∫–æ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç —Ç–æ–≤–∞—Ä –ø–æ —Ç–≤–æ–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.',
                    keyboard: keyboard(subscribeSearch)
                })


            if (ctx.text == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
                return ctx.scene.step.go(0)

            if (ctx.text == '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è') {
                try {
                    const { userQuery, sizeRange, range: priceRange } = ctx.scene.state

                    const mailingIsExists = await MailingUser.findOne({
                        userId: ctx.senderId,
                        type: 'subscribeSearch',
                        'data.userQuery.value': userQuery.value
                    })

                    console.log(mailingIsExists);

                    if (mailingIsExists) {
                        ctx.send('‚ùå –¢—ã —É–∂–µ –±—ã–ª –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä. –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ')
                        return ctx.scene.step.go(0)     
                    }


                    const mailingUser = new MailingUser({
                        userId: ctx.senderId,
                        type: 'subscribeSearch',
                        groupId: config.get('groupID'),
                        data: {
                            userQuery, 
                            sizeRange, 
                            priceRange: {
                                min: priceRange[0],
                                max: priceRange[1]
                            }
                        }
                    })

                    await mailingUser.save()

                    ctx.send('‚úâÔ∏è –¢—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞. –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –º–æ–∂–Ω–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ')
                    return ctx.scene.step.go(0)                    
                } catch (e) {
                    console.log(e)
                    ctx.send('‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É')
                    return ctx.scene.leave()
                }
            }
                
        }
	])	
]

export default searchScene